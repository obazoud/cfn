{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates single or dual NAT instances using ENI and Autoscaling for HA",

  "Parameters" : {
    "Prefix" : {
      "Default" : "CFN.",
      "Description" : "The prefix for The names of all created resources",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "64",
      "AllowedPattern" : "[a-zA-Z0-9][a-zA-Z0-9\\.\\-\\_]*",
      "ConstraintDescription" : "must start with an alphanumeric character and contain alphanumeric characters and '.', '-' or '_'."
    },

  "InstanceType" : {
    "Default" : "t2.micro",
    "Description" : "The instance type for the NatGw",
    "Type" : "String",
    "AllowedValues" : ["t2.micro","t2.small","t2.medium","t2.large","m4.large","m4.xlarge","m4.2xlarge","m4.4xlarge","m4.10xlarge","m3.medium","m3.large","m3.xlarge","m3.2xlarge"]
    },

   "VpcId" : {
      "Description" : "The VPC which the security groups will belong",
      "Type" : "AWS::EC2::VPC::Id"
    },

    "SubnetIdPublic1" : {
      "Description" : "The SubnetId for the NatGw1",
      "Type" : "AWS::EC2::Subnet::Id"
    },

    "PrivateSubnetIds" : {
      "Description" : "a list of the two private subnets",
      "Type" : "List<AWS::EC2::Subnet::Id>"
    }
  },

  "Mappings" : { 
    "NatGwImageId" : {
      "ap-northeast-1" :   { "ImageId" : "ami-03cf3903" } ,
      "ap-southeast-1" :   { "ImageId" : "ami-b49dace6" } ,
      "ap-southeast-2" :   { "ImageId" : "ami-e7ee9edd" } ,
      "eu-central-1" :     { "ImageId" : "ami-46073a5b" } ,
      "eu-west-1" :        { "ImageId" : "ami-6975eb1e" } ,
      "sa-east-1" :        { "ImageId" : "ami-fbfa41e6" } ,
      "us-east-1" :        { "ImageId" : "ami-303b1458" } ,
      "us-west-1" :        { "ImageId" : "ami-7da94839" } ,
      "us-west-2" :        { "ImageId" : "ami-69ae8259" } 
    }
  },

  "Resources" : {
    "EipNatGw1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },
    
    "NetworkInterfaceNatGw1" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Attached to NAT GW Instance to provide consistant instance for routing",
        "SourceDestCheck" : false,
        "SubnetId" : { "Ref" : "SubnetIdPublic1" },
        "Tags" : [ { "Key" : "Name",
                     "Value" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "NetworkInterfaceNatGw1" ] ] }
                     }
                 ]
        }
    },

    "EIPAssociationEipNatGw1toNetworkInterfaceNatGw1" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "EipNatGw1", "AllocationId" ] },
        "NetworkInterfaceId" : { "Ref" : "NetworkInterfaceNatGw1" }
      }
    },

    "RouteTableNatGw1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "Tags" : [ { "Key" : "Name",
                     "Value" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "RouteTableNatGw1" ] ] }
                     }
                 ]
        }
      },

    "RouteNatGw1" : { 
      "Type" : "AWS::EC2::Route",
      "Properties" : { 
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NetworkInterfaceId" : { "Ref" : "NetworkInterfaceNatGw1" },
        "RouteTableId" : { "Ref" : "RouteTableNatGw1" }
      }
    },

    "SubnetRouteTableAssociationRouteTableNatGw1toSubnetPrivate1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTableNatGw1" },
        "SubnetId" : { "Fn::Select" : [ "0" , { "Ref" : "PrivateSubnetIds" } ] }
      }
    },

    "SubnetRouteTableAssociationRouteTableNatGw1toSubnetPrivate2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTableNatGw1" },
        "SubnetId" : { "Fn::Select" : [ "1" , { "Ref" : "PrivateSubnetIds" } ] }
      }
    },

    "RoleNatGw" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : { 
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
                "Action": "sts:AssumeRole",
                "Principal": { "Service": "ec2.amazonaws.com" },
                "Effect": "Allow",
                "Sid": ""
              } ]
        },
        "Policies": [ {
          "PolicyName" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "AttachNetworkInterface" ] ] },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": "ec2:AttachNetworkInterface",
              "Resource": "*"
            } ] 
          }
        } ]
      }
    },

    "InstanceProfileNatGw" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [ { "Ref" : "RoleNatGw" } ]
      }
    },

    "LaunchConfigurationNatGw" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "IamInstanceProfile" : { "Ref" : "InstanceProfileNatGw" },
        "ImageId" : { "Fn::FindInMap" : [ "NatGwImageId" , { "Ref" : "AWS::Region" }, "ImageId" ] }, 
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : "jjk3@nimbusscale",
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                        "#!/bin/bash\n",
                        "/usr/bin/aws ec2 attach-network-interface --region ", { "Ref" : "AWS::Region" },
                                                                 " --network-interface-id ", { "Ref" : "NetworkInterfaceNatGw1" },
                                                                 " --instance-id $(curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                                                 " --device-index 1\n",
                        "sleep 30\n",
                        "ifdown eth0\n",
                        "iptables -t nat -A POSTROUTING -j MASQUERADE\n",
                        "iptables -A FORWARD -j ACCEPT\n",
                        "echo 1 > /proc/sys/net/ipv4/ip_forward\n"
                      ]]}}
        }
      },
    
    "AutoScalingGroupNatGw" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "LaunchConfigurationName" : { "Ref" : "LaunchConfigurationNatGw" },
        "MaxSize" : "1",
        "MinSize" : "1",
        "VPCZoneIdentifier" : [ { "Ref" : "SubnetIdPublic1" } ],
        "Tags" : [ { "Key" : "Name",
                     "Value" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "NatGw1" ] ] },
                     "PropagateAtLaunch" : "true"
                   }
                 ]
        },
        "DependsOn" : "NetworkInterfaceNatGw1"
      }
  }
}
