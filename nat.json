{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates single or dual NAT instances using ENI and Autoscaling for HA",

  "Parameters" : {
    "Prefix" : {
      "Default" : "CFN.",
      "Description" : "The prefix for The names of all created resources",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "64",
      "AllowedPattern" : "[a-zA-Z0-9][a-zA-Z0-9\\.\\-\\_]*",
      "ConstraintDescription" : "must start with an alphanumeric character and contain alphanumeric characters and '.', '-' or '_'."
    },

   "VpcId" : {
      "Description" : "The VPC which the security groups will belong",
      "Type" : "AWS::EC2::VPC::Id"
    },

    "SubnetIdPrivate1" : {
      "Description" : "The SubnetId for the NAT GW",
      "Type" : "AWS::EC2::Subnet::Id"
    },
    
    "SubnetIdPrivate2" : {
      "Description" : "The SubnetId for the NAT GW",
      "Type" : "AWS::EC2::Subnet::Id"
    }
  },


  "Resources" : {
    "EipNatGw1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },
    
    "NetworkInterfaceNatGw1" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Attached to NAT GW Instance to provide consistant instance for routing",
        "SourceDestCheck" : false,
        "SubnetId" : { "Ref" : "SubnetIdPrivate1" },
        "Tags" : [ { "Key" : "Name",
                     "Value" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "NetworkInterfaceNatGw1" ] ] }
                     }
                 ]
        }
    },

    "EIPAssociationEipNatGw1toNetworkInterfaceNatGw1" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "EipNatGw1", "AllocationId" ] },
        "NetworkInterfaceId" : { "Ref" : "NetworkInterfaceNatGw1" }
      }
    },

    "RouteTableNatGw1" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "Tags" : [ { "Key" : "Name",
                     "Value" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "RouteTableNatGw1" ] ] }
                     }
                 ]
        }
      },

    "RouteNatGw1" : { 
      "Type" : "AWS::EC2::Route",
      "Properties" : { 
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NetworkInterfaceId" : { "Ref" : "NetworkInterfaceNatGw1" },
        "RouteTableId" : { "Ref" : "RouteTableNatGw1" }
      }
    },

    "SubnetRouteTableAssociationRouteTableNatGw1toSubnetPrivate1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTableNatGw1" },
        "SubnetId" : { "Ref" : "SubnetIdPrivate1" }
      }
    },

    "SubnetRouteTableAssociationRouteTableNatGw1toSubnetPrivate2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTableNatGw1" },
        "SubnetId" : { "Ref" : "SubnetIdPrivate2" }
      }
    },

    "RoleNatGw" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : { 
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
                "Action": "sts:AssumeRole",
                "Principal": { "Service": "ec2.amazonaws.com" },
                "Effect": "Allow",
                "Sid": ""
              } ]
        },
        "Policies": [ {
          "PolicyName" : { "Fn::Join" : [ "", [ { "Ref" : "Prefix" }, "AttachNetworkInterface" ] ] },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": "ec2:AttachNetworkInterface",
              "Resource": "*"
            } ] 
          }
        } ]
      }
    }
  }
}

